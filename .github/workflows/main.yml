name: Deploy Vite React App to Kubernetes

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_USERNAME: subhankarm2312

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node 24
        uses: actions/setup-node@v3
        with:
          node-version: "24"

      - name: Extract short SHA
        run: echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

      - name: Generate timestamp
        run: echo "TIMESTAMP=$(date -u +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Create image tag
        run: echo "IMAGE_TAG=${SHORT_SHA}-${TIMESTAMP}" >> $GITHUB_ENV

      # -----------------------------
      # Cluster Bootstrap Step
      # -----------------------------
      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Install Nginx Ingress Controller
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml
          kubectl wait --namespace ingress-nginx \
            --for=condition=Ready pods \
            --selector=app.kubernetes.io/component=controller \
            --timeout=180s

      - name: Install cert-manager
        run: |
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/latest/download/cert-manager.yaml
          kubectl wait --namespace cert-manager \
            --for=condition=Ready pods \
            --selector=app.kubernetes.io/instance=cert-manager \
            --timeout=180s

      # -----------------------------
      # Docker Build & Push
      # -----------------------------
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ts-client:${{ env.IMAGE_TAG }}

      # -----------------------------
      # Kubernetes Deploy
      # -----------------------------
      - name: Set up kubectl (latest)
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/cluster-issuer.yaml || true
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml || true
          kubectl set image deployment/ts-react-client ts-react-client=${{ secrets.DOCKERHUB_USERNAME }}/ts-react-client:${{ env.IMAGE_TAG }}
          kubectl rollout status deployment/ts-react-client
